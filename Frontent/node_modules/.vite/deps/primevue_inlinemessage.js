import {
  script as script3,
  script2 as script4
} from "./chunk-7YOPSFQZ.js";
import {
  script as script2
} from "./chunk-2CILATGI.js";
import {
  script
} from "./chunk-3CT6LAXO.js";
import "./chunk-K7AHPVUE.js";
import "./chunk-DC6FPUCJ.js";
import {
  createBaseVNode,
  createBlock,
  createElementBlock,
  createTextVNode,
  normalizeClass,
  openBlock,
  renderSlot,
  resolveDynamicComponent
} from "./chunk-3NMN3MUW.js";
import "./chunk-7FP5O474.js";

// node_modules/primevue/inlinemessage/inlinemessage.esm.js
var script5 = {
  name: "InlineMessage",
  props: {
    severity: {
      type: String,
      default: "error"
    },
    icon: {
      type: String,
      default: void 0
    }
  },
  timeout: null,
  data() {
    return {
      visible: true
    };
  },
  mounted() {
    if (!this.sticky) {
      setTimeout(() => {
        this.visible = false;
      }, this.life);
    }
  },
  computed: {
    containerClass() {
      return ["p-inline-message p-component p-inline-message-" + this.severity, { "p-inline-message-icon-only": !this.$slots.default }];
    },
    iconComponent() {
      return {
        info: script4,
        success: script2,
        warn: script3,
        error: script
      }[this.severity];
    }
  }
};
var _hoisted_1 = { class: "p-inline-message-text" };
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    "aria-live": "polite",
    class: normalizeClass($options.containerClass)
  }, [
    renderSlot(_ctx.$slots, "icon", {}, () => [
      (openBlock(), createBlock(resolveDynamicComponent($props.icon ? "span" : $options.iconComponent), {
        class: normalizeClass(["p-inline-message-icon", $props.icon])
      }, null, 8, ["class"]))
    ]),
    createBaseVNode("span", _hoisted_1, [
      renderSlot(_ctx.$slots, "default", {}, () => [
        createTextVNode("Â ")
      ])
    ])
  ], 2);
}
function styleInject(css, ref) {
  if (ref === void 0)
    ref = {};
  var insertAt = ref.insertAt;
  if (!css || typeof document === "undefined") {
    return;
  }
  var head = document.head || document.getElementsByTagName("head")[0];
  var style = document.createElement("style");
  style.type = "text/css";
  if (insertAt === "top") {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}
var css_248z = "\n.p-inline-message {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    vertical-align: top;\n}\n.p-inline-message-icon-only .p-inline-message-text {\n    visibility: hidden;\n    width: 0;\n}\n.p-fluid .p-inline-message {\n    display: flex;\n}\n";
styleInject(css_248z);
script5.render = render;
export {
  script5 as default
};
//# sourceMappingURL=primevue_inlinemessage.js.map
